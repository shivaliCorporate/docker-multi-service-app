secrets:
  my_secret:
    file: ./secret-data.txt
services:
  my-app:
    build:
      context: mock-backend/.
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    restart: always
    networks:
      - mynetwork
    depends_on:
      mongodb:
        condition: service_healthy
    secrets:
      - my_secret

    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  mongodb:
    image: mongo
    ports:
      - 27017:27017
    secrets:
      - my_secret
    volumes:
      - ~/secrets/db_usrname.txt:/app/secrets/db_usrname.txt:ro
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=/app/secrets/db_usrname.txt
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/my_secret
    restart: always
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s

  mongo-express:
    image: mongo-express
    restart: always # fixes MongoNetworkError when mongodb is not ready when mongo-express starts
    ports:
      - 8080:8081
    secrets:
      - my_secret
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD_FILE=/run/secrets/my_secret
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          memory: 512M # Set the maximum memory limit for Mongo Express container
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://127.0.0.1:8081/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

volumes:
  mongo-data:

networks:
  mynetwork:
